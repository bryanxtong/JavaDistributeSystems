server:
  port: 8082
spring:
  application:
    name: gateway-oauth2
  cloud:
    gateway:
      default-filters:
        - TokenRelay
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 10
            redis-rate-limiter.burstCapacity: 20
            redis-rate-limiter.requestTokens: 1
            key-resolver: "#{@userKeyResolver}"
        - name: Retry
          args:
            retries: 3
            methods: GET
            series: SERVER_ERROR
            exceptions: java.io.IOException,java.util.concurrent.TimeoutException
            backoff:
              firstBackOff: 50ms
              maxBackOff: 500ms
              factor: 2
              basedOnPreviousValue: false
      routes:
        - id: user-service
          uri: http://localhost:8083
          predicates:
            - Path=/api/user/**
          filters:
            - name: CircuitBreaker
              args:
                name: userCircuitBreaker
                fallbackUri: forward:/user-fallback
        - id: product-service
          uri: http://localhost:8083
          predicates:
            - Path=/api/products/**
        - id: admin-service
          uri: http://localhost:8083
          predicates:
            - Path=/api/admin/**
        - id: manager-service
          uri: http://localhost:8083
          predicates:
            - Path=/api/manager/**
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: gateway-oauth2
            client-secret: ZM75a7PxJ7OGziuXwcmLTklSz44nawrG
            scope: openid,profile,email
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
            client-name: Keycloak

        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/myrealm
            authorization-uri: http://localhost:8080/realms/myrealm/protocol/openid-connect/auth
            token-uri: http://localhost:8080/realms/myrealm/protocol/openid-connect/token
            user-info-uri: http://localhost:8080/realms/myrealm/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:8080/realms/myrealm/protocol/openid-connect/certs
            user-name-attribute: preferred_username
  data:
    redis:
      host: localhost
      port: 6379
      password:
      timeout: 10000

resilience4j:
  circuitbreaker:
    configs:
      default:
        register-health-indicator: true
        sliding-window-size: 20
        permitted-number-of-calls-in-half-open-state: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 15000
        minimum-number-of-calls: 5
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 1000
  timelimiter:
    configs:
      default:
        timeout-duration: 5s
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web.reactive: TRACE
management:
  endpoint:
    health:
      show-details: always
      show-components: always
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,metrics,circuitbreakers,prometheus
  health:
    circuitbreakers:
      enabled: true
    indicators:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true